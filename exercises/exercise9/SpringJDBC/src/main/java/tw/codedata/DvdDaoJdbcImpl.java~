package tw.codedata;

import org.springframework.jdbc.core.support.JdbcDaoSupport;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import javax.sql.DataSource;
import java.sql.*;
import java.util.*;

public class DvdDaoJdbcImpl extends JdbcDaoSupport implements DvdDao {

    public DvdDaoJdbcImpl(DataSource dataSource) {
        setDataSource(dataSource);
    }

    public DvdDaoJdbcImpl createTables() {
        /*
            使用 getJdbcTemplate 方法取得 JdbcTemplate 實例
            呼叫 execute 方法執行以下 SQL
               - DROP TABLE dvds if exists
               - DROP TABLE directors if exists
        */

        jdbcTemplate.execute(
                "CREATE TABLE directors ("
                + "id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1),"
                + "name VARCHAR(255),"
                + "PRIMARY KEY(id))"
        );
        jdbcTemplate.execute(
                "CREATE TABLE dvds ("
                + "id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1),"
                + "title VARCHAR(255),"
                + "year INTEGER NOT NULL,"
                + "duration INTEGER NOT NULL, "
                + "director_id INTEGER NOT NULL, "
                + "FOREIGN KEY (director_id) REFERENCES directors(id))"
        );

        return this;
    }

    public void saveDvd(Dvd dvd) {
        Integer directorId = getDirectorId(dvd.director);
        // 執行 JdbcTemplate 的 update 方法搭配 SQL 來完成操作
    }

    public List<Dvd> allDvds() {
        return getJdbcTemplate().query(
                "SELECT dvds.title, dvds.year, dvds.duration, "
                + "directors.name FROM dvds, directors "
                + "WHERE dvds.director_id = directors.id"
                + " ORDER BY dvds.title",
                    // 使用 RowMapper 來建立 Dvd 實例
                );
    }

    private Integer getDirectorId(String director) {
        if (hasNoDirector(director)) {
            saveDirector(director);
        }
        // 使用 JdbcTemplate 的 queryForList 來完成查詢
        // 並取得 id 值
    }

    private boolean hasNoDirector(String director) {
        // 使用 JdbcTemplate 的 queryForList 來完成查詢
        // 並取得 id 值
    }

    private void saveDirector(String director) {
        getJdbcTemplate().update(
                "INSERT INTO directors(name) values(?)", director);
    }
}
